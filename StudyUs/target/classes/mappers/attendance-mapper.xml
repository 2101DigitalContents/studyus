<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="attendanceMapper">

	<resultMap type="Attendance" id="attendanceResultMap">
		<id property="attendanceNo" column="AT_NO"></id>
		<result property="rNum" column="RNUM"></result>
		<result property="memberNo" column="MB_NO"></result>
		<result property="studyNo" column="ST_NO"></result>
		<result property="meetingNo" column="ME_NO"></result>
		<result property="atInsertDate" column="AT_INSERTDATE"></result> 
		<collection property="member" resultMap="memberMapper.memberResultMap"></collection>
	</resultMap>
	
	<resultMap type="com.studyus.attendance.domain.AttendanceAmountWithMemberVO" id="attendanceAmountWithMemberResultMap">
		<id property="memberNo" column="MB_NO"></id>
		<result property="attendanceAmount" column="ATTENDANCE_AMOUNT"></result>
		<collection property="member" resultMap="memberMapper.memberResultMap"></collection>
	</resultMap>
	
	<select id="printAllAtt" resultMap="attendanceResultMap">
		SELECT ROW_NUMBER() OVER(ORDER BY A.AT_INSERTDATE DESC) AS RNUM,
		A.AT_NO, A.MB_NO, A.ST_NO, M.MB_NICKNAME, 
		A.AT_INSERTDATE, A.ME_NO   
		FROM ATTENDANCE A
		JOIN MEMBER M ON A.MB_NO = M.MB_NO
		WHERE ST_NO = #{studyNo}
	</select>
	
	<insert id="insertAttendance" parameterType="Attendance">
		INSERT INTO ATTENDANCE VALUES (SEQ_ATTENDANCE.NEXTVAL,
										#{memberNo},
										#{studyNo},
										#{meetingNo},
										SYSDATE)
	</insert>
	
	<select id="checkTodayAttendedAlready" parameterType="Attendance" resultType="int">
		SELECT COUNT(*) FROM ATTENDANCE WHERE ME_NO = #{meetingNo} AND MB_NO = #{memberNo} AND TRUNC(SYSDATE) &lt;= AT_INSERTDATE
	</select>
	
	<!-- 회원 한 명의 출석률을 출력합니다. @author 김동현 -->  
	<select id="selectPersonalAttendanceRate" parameterType="Map" resultType="float">
		SELECT 
			CASE 
				WHEN REQUIRED_ATT = 0 
		    		OR REQUIRED_ATT IS NULL 
		    		OR ACTUAL_ATT = 0 
		    		OR ACTUAL_ATT IS NULL 
		    	THEN 0
    		ELSE ACTUAL_ATT / REQUIRED_ATT END ATTENDANCE_RATE 
    	FROM 
		    (SELECT
		        (SELECT COUNT(*) FROM ATTENDANCE 
		            WHERE ST_NO = #{studyNo} 
		                AND MB_NO = #{memberNo}) AS ACTUAL_ATT
		        ,
		        (SELECT COUNT(*) FROM MEMBER M LEFT OUTER JOIN ATTENDANCE A USING (MB_NO)
		            WHERE ST_NO = #{studyNo}
		                AND MB_NO = #{memberNo}
		                AND SYSDATE - #{recentDays} &lt;= A.AT_INSERTDATE) AS REQUIRED_ATT
		    FROM DUAL)
	</select>
	
	<!-- 특정 스터디에 가입한 전체 인원의 출석률을 출력합니다. -->
	<select id="selectStudyTotalAttendanceRate" parameterType="Map" resultType="float">
		SELECT 
		    CASE 
		    	WHEN REQUIRED_ATT = 0 
		    		OR REQUIRED_ATT IS NULL 
		    		OR ACTUAL_ATT = 0 
		    		OR ACTUAL_ATT IS NULL 
		    	THEN 0
		    ELSE ACTUAL_ATT / REQUIRED_ATT END ATTENDANCE_RATE
		FROM
		    (SELECT 
		        (SELECT SUM(ME_REQUIRED_ATTENDANCE) 
		        	FROM MEETING 
		        		WHERE ST_NO = #{studyNo} 
		        			AND SYSDATE - #{recentDays} &lt;= ME_INSERTDATE) 
		        	AS REQUIRED_ATT,
		        (SELECT COUNT(*) 
		        	FROM ATTENDANCE 
		        		WHERE ST_NO = #{studyNo}
		        			AND SYSDATE - #{recentDays} &lt;= AT_INSERTDATE) 
		        	AS ACTUAL_ATT
		    FROM DUAL)
	</select>
	
	<!-- 최근 -->
	<select id="selectStudyTopAttendanceMemberList" parameterType="Map" resultType="com.studyus.attendance.domain.AttendanceAmountWithMemberVO" resultMap="attendanceAmountWithMemberResultMap">
		SELECT * FROM (
		    SELECT COUNT(*) AS ATTENDANCE_AMOUNT, M.MB_NO
		        FROM STUDY S 
		            JOIN ENROLLMENT E 
		                ON S.ST_NO = E.ST_NO 
		            JOIN MEMBER M 
		                ON (M.MB_NO = E.MB_NO)
		            JOIN ATTENDANCE A 
		                ON (M.MB_NO = A.MB_NO)
		        WHERE EN_STATUS = 1
		        	AND MB_STATUS = 1
		            AND S.ST_NO = #{studyNo}
		            AND TRUNC(A.AT_INSERTDATE) >= SYSDATE - #{recentDays}
		    GROUP BY M.MB_NO) TOP_ATT
		JOIN MEMBER M 
			USING (MB_NO)
		WHERE ROWNUM &lt;= #{memberAmount}
		ORDER BY ATTENDANCE_AMOUNT DESC
	</select>
	
	<!-- 해당 스터디가 현재 출석체크 시간인지 확인합니다. -->
	<select id="checkAttendanceTime" parameterType="Map" resultType="int">
		SELECT COUNT(*) FROM STUDY WHERE ST_NO = #{studyNo} AND #{now} BETWEEN ST_START AND ST_END
	</select>
	
	<!-- studyNo에 대해 memberNo가 오늘 출석체크한 기록이 몇 개인지 확인합니다. -->
	<select id="checkAttendanceToday" parameterType="Attendance" resultType="int">
		SELECT COUNT(*) FROM ATTENDANCE WHERE ST_NO = #{studyNo} AND MB_NO = #{memberNo} AND TRUNC(SYSDATE) &lt;= AT_INSERTDATE
	</select>
	
</mapper>
